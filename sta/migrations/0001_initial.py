# Generated by Django 5.2b1 on 2025-03-01 00:11

import django.db.models.deletion
import iam.models.utils
import sta.models.photo
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('iam', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ObservedProperty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('definition', models.TextField()),
                ('description', models.TextField()),
                ('observed_property_type', models.CharField(max_length=500)),
                ('code', models.CharField(max_length=500)),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='observed_properties', to='iam.workspace')),
            ],
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='ProcessingLevel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255)),
                ('definition', models.TextField(blank=True, null=True)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='processing_levels', to='iam.workspace')),
            ],
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='ResultQualifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='result_qualifiers', to='iam.workspace')),
            ],
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('encoding_type', models.CharField(max_length=255)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('sensor_model', models.CharField(blank=True, max_length=255, null=True)),
                ('sensor_model_link', models.CharField(blank=True, max_length=500, null=True)),
                ('method_type', models.CharField(max_length=100)),
                ('method_link', models.CharField(blank=True, max_length=500, null=True)),
                ('method_code', models.CharField(blank=True, max_length=50, null=True)),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sensors', to='iam.workspace')),
            ],
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('sampling_feature_type', models.CharField(max_length=200)),
                ('sampling_feature_code', models.CharField(max_length=200)),
                ('site_type', models.CharField(max_length=200)),
                ('is_private', models.BooleanField(default=False)),
                ('data_disclaimer', models.TextField(blank=True, null=True)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='things', to='iam.workspace')),
            ],
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('thing', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tags', to='sta.thing')),
            ],
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('encoding_type', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=16, max_digits=22)),
                ('longitude', models.DecimalField(decimal_places=16, max_digits=22)),
                ('elevation_m', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True)),
                ('elevation_datum', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('county', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('thing', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='locations', to='sta.thing')),
            ],
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('symbol', models.CharField(max_length=255)),
                ('definition', models.TextField()),
                ('unit_type', models.CharField(max_length=255)),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='units', to='iam.workspace')),
            ],
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='Datastream',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('observation_type', models.CharField(max_length=255)),
                ('result_type', models.CharField(max_length=255)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('observed_area', models.CharField(blank=True, max_length=255, null=True)),
                ('sampled_medium', models.CharField(max_length=255)),
                ('value_count', models.IntegerField(blank=True, null=True)),
                ('no_data_value', models.FloatField()),
                ('intended_time_spacing', models.FloatField(blank=True, null=True)),
                ('intended_time_spacing_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('aggregation_statistic', models.CharField(max_length=255)),
                ('time_aggregation_interval', models.FloatField()),
                ('time_aggregation_interval_unit', models.CharField(max_length=255)),
                ('phenomenon_begin_time', models.DateTimeField(blank=True, null=True)),
                ('phenomenon_end_time', models.DateTimeField(blank=True, null=True)),
                ('result_end_time', models.DateTimeField(blank=True, null=True)),
                ('result_begin_time', models.DateTimeField(blank=True, null=True)),
                ('is_private', models.BooleanField(default=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('observed_property', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='datastreams', to='sta.observedproperty')),
                ('processing_level', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='datastreams', to='sta.processinglevel')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='datastreams', to='sta.sensor')),
                ('thing', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='datastreams', to='sta.thing')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='datastreams', to='sta.unit')),
            ],
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('pk', models.CompositePrimaryKey('datastream_id', 'phenomenon_time', 'id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('phenomenon_time', models.DateTimeField()),
                ('result', models.FloatField()),
                ('result_time', models.DateTimeField(blank=True, null=True)),
                ('quality_code', models.CharField(blank=True, max_length=255, null=True)),
                ('datastream', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sta.datastream')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('datastream_id', 'phenomenon_time'), name='unique_datastream_timestamps')],
            },
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('photo', models.FileField(upload_to=sta.models.photo.photo_storage_path)),
                ('thing', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='photos', to='sta.thing')),
            ],
            options={
                'unique_together': {('thing', 'name')},
            },
            bases=(models.Model, iam.models.utils.PermissionChecker),
        ),
    ]
