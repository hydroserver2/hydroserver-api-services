# Generated by Django 4.2.4 on 2023-09-01 22:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phenomenon_time', models.DateTimeField(db_column='phenomenonTime')),
                ('result', models.FloatField()),
                ('result_time', models.DateTimeField(blank=True, db_column='resultTime', null=True)),
                ('quality_code', models.CharField(blank=True, db_column='qualityCode', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Observation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataLoader',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_loaders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('header_row', models.PositiveIntegerField(blank=True, null=True)),
                ('data_start_row', models.PositiveIntegerField(blank=True, null=True)),
                ('delimiter', models.CharField(blank=True, max_length=1, null=True)),
                ('quote_char', models.CharField(blank=True, max_length=1, null=True)),
                ('interval', models.PositiveIntegerField(blank=True, null=True)),
                ('interval_units', models.CharField(blank=True, max_length=255, null=True)),
                ('crontab', models.CharField(blank=True, max_length=255, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('paused', models.BooleanField()),
                ('timestamp_column', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp_format', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp_offset', models.CharField(blank=True, max_length=255, null=True)),
                ('data_source_thru', models.DateTimeField(blank=True, null=True)),
                ('last_sync_successful', models.BooleanField(blank=True, null=True)),
                ('last_sync_message', models.TextField(blank=True, null=True)),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
                ('next_sync', models.DateTimeField(blank=True, null=True)),
                ('data_loader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.dataloader')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_sources', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureOfInterest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('encoding_type', models.CharField(db_column='encodingType', max_length=255)),
                ('feature', models.TextField()),
            ],
            options={
                'db_table': 'FeatureOfInterest',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('encoding_type', models.CharField(db_column='encodingType', max_length=255)),
                ('latitude', models.DecimalField(decimal_places=16, max_digits=22)),
                ('longitude', models.DecimalField(decimal_places=16, max_digits=22)),
                ('elevation_m', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True)),
                ('elevation_datum', models.CharField(blank=True, db_column='elevationDatum', max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('county', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'Location',
            },
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('sampling_feature_type', models.CharField(db_column='samplingFeatureType', max_length=200)),
                ('sampling_feature_code', models.CharField(db_column='samplingFeatureCode', max_length=200)),
                ('site_type', models.CharField(db_column='siteType', max_length=200)),
                ('is_private', models.BooleanField(db_column='isPrivate', default=False)),
                ('data_disclaimer', models.TextField(blank=True, db_column='dataDisclaimer', null=True)),
                ('location', models.OneToOneField(db_column='locationId', on_delete=django.db.models.deletion.CASCADE, related_name='thing', to='core.location')),
            ],
            options={
                'db_table': 'Thing',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('symbol', models.CharField(max_length=255)),
                ('definition', models.TextField()),
                ('type', models.CharField(max_length=255)),
                ('person', models.ForeignKey(blank=True, db_column='personId', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Unit',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('encoding_type', models.CharField(db_column='encodingType', max_length=255)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('model_link', models.CharField(blank=True, db_column='modelLink', max_length=500, null=True)),
                ('method_type', models.CharField(db_column='methodType', max_length=100)),
                ('method_link', models.CharField(blank=True, db_column='methodLink', max_length=500, null=True)),
                ('method_code', models.CharField(blank=True, db_column='methodCode', max_length=50, null=True)),
                ('person', models.ForeignKey(blank=True, db_column='personId', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Sensor',
            },
        ),
        migrations.CreateModel(
            name='ProcessingLevel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255)),
                ('definition', models.TextField(blank=True, null=True)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('person', models.ForeignKey(blank=True, db_column='personId', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='processing_levels', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ProcessingLevel',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_path', models.CharField(db_column='filePath', max_length=1000)),
                ('link', models.URLField(max_length=2000)),
                ('thing', models.ForeignKey(db_column='thingId', on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core.thing')),
            ],
            options={
                'db_table': 'Photo',
            },
        ),
        migrations.CreateModel(
            name='ObservedProperty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('definition', models.TextField()),
                ('description', models.TextField()),
                ('type', models.CharField(max_length=500)),
                ('code', models.CharField(max_length=500)),
                ('person', models.ForeignKey(blank=True, db_column='personId', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ObservedProperty',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('location', models.ForeignKey(db_column='locationId', on_delete=django.db.models.deletion.CASCADE, to='core.location')),
                ('thing', models.ForeignKey(db_column='thingId', on_delete=django.db.models.deletion.CASCADE, to='core.thing')),
            ],
            options={
                'db_table': 'HistoricalLocation',
            },
        ),
        migrations.CreateModel(
            name='Datastream',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.UUIDField()),
                ('description', models.TextField()),
                ('observation_type', models.CharField(db_column='observationType', max_length=255)),
                ('result_type', models.CharField(db_column='resultType', max_length=255)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('sampled_medium', models.CharField(db_column='sampledMedium', max_length=255)),
                ('value_count', models.IntegerField(blank=True, db_column='valueCount', null=True)),
                ('no_data_value', models.FloatField(db_column='noDataValue')),
                ('intended_time_spacing', models.FloatField(blank=True, null=True)),
                ('aggregation_statistic', models.CharField(db_column='aggregationStatistic', max_length=255)),
                ('time_aggregation_interval', models.FloatField(db_column='timeAggregationInterval')),
                ('phenomenon_begin_time', models.DateTimeField(blank=True, db_column='phenomenonBeginTime', null=True)),
                ('phenomenon_end_time', models.DateTimeField(blank=True, db_column='phenomenonEndTime', null=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('data_source_column', models.CharField(blank=True, max_length=255, null=True)),
                ('observed_area', models.CharField(blank=True, max_length=255, null=True)),
                ('result_time', models.DateTimeField(blank=True, db_column='resultTime', null=True)),
                ('result_begin_time', models.DateTimeField(blank=True, db_column='resultBeginTime', null=True)),
                ('data_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.datasource')),
                ('intended_time_spacing_units', models.ForeignKey(blank=True, db_column='intendedTimeSpacingUnitsId', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intended_time_spacing_units', to='core.unit')),
                ('observed_property', models.ForeignKey(db_column='observedPropertyId', on_delete=django.db.models.deletion.PROTECT, related_name='datastreams', to='core.observedproperty')),
                ('processing_level', models.ForeignKey(db_column='processingLevelId', on_delete=django.db.models.deletion.PROTECT, related_name='datastreams', to='core.processinglevel')),
                ('sensor', models.ForeignKey(db_column='sensorId', on_delete=django.db.models.deletion.PROTECT, related_name='datastreams', to='core.sensor')),
                ('thing', models.ForeignKey(db_column='thingId', on_delete=django.db.models.deletion.CASCADE, related_name='datastreams', to='core.thing')),
                ('time_aggregation_interval_units', models.ForeignKey(db_column='timeAggregationIntervalUnitsId', on_delete=django.db.models.deletion.PROTECT, related_name='time_aggregation_interval_units', to='core.unit')),
                ('unit', models.ForeignKey(db_column='unitId', on_delete=django.db.models.deletion.PROTECT, related_name='datastreams', to='core.unit')),
            ],
            options={
                'db_table': 'Datastream',
            },
        ),
        migrations.CreateModel(
            name='ThingAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owns_thing', models.BooleanField(db_column='ownsThing', default=False)),
                ('follows_thing', models.BooleanField(db_column='followsThing', default=False)),
                ('is_primary_owner', models.BooleanField(db_column='isPrimaryOwner', default=False)),
                ('person', models.ForeignKey(db_column='personId', on_delete=django.db.models.deletion.CASCADE, related_name='thing_associations', to=settings.AUTH_USER_MODEL)),
                ('thing', models.ForeignKey(db_column='thingId', on_delete=django.db.models.deletion.CASCADE, related_name='associates', to='core.thing')),
            ],
            options={
                'db_table': 'ThingAssociation',
                'unique_together': {('thing', 'person')},
            },
        ),
    ]
