# Generated by Django 4.1.4 on 2023-02-21 16:46

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('uuid', models.UUIDField(default=uuid.UUID('3331f68b-3c74-4509-86fa-602a2349c056'), editable=False, primary_key=True, serialize=False)),
                ('phenomenon_time', models.DateTimeField()),
                ('result', models.DecimalField(decimal_places=16, max_digits=22)),
                ('valid_begin_time', models.DateTimeField(blank=True, null=True)),
                ('valid_end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AggregationStatisticCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ElevationDatumCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MethodTypeCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ObservationTypeCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationTypeCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessingLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('definition', models.TextField(blank=True, null=True)),
                ('explanation', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResultQualityCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResultTypeCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampledMediumCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SamplingFeatureTypeCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SensorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('link', models.TextField(blank=True, null=True)),
                ('manufacturer_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SiteTypeCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatusCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitTypeCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VariableTypeCv',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('definition', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('symbol', models.TextField()),
                ('definition', models.TextField()),
                ('unit_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.unittypecv')),
            ],
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('uuid', models.UUIDField(default=uuid.UUID('2ebe75b8-b2fa-4512-90f7-949b8d7e08c7'), editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('latitude', models.DecimalField(decimal_places=16, max_digits=22)),
                ('longitude', models.DecimalField(decimal_places=16, max_digits=22)),
                ('elevation_m', models.FloatField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('county', models.CharField(blank=True, max_length=255, null=True)),
                ('elevation_datum', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.elevationdatumcv')),
                ('sampling_feature_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.samplingfeaturetypecv')),
                ('site_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.sitetypecv')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('uuid', models.UUIDField(default=uuid.UUID('ed1cd7c8-785e-43f8-a48a-58fbf5985a0c'), editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
                ('method_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.methodtypecv')),
            ],
        ),
        migrations.CreateModel(
            name='ObservedProperty',
            fields=[
                ('uuid', models.UUIDField(default=uuid.UUID('da4839d5-d388-45e4-8c96-2665eda5ece7'), editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('definition', models.TextField()),
                ('description', models.TextField()),
                ('variable_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.variabletypecv')),
            ],
        ),
        migrations.CreateModel(
            name='Datastream',
            fields=[
                ('uuid', models.UUIDField(default=uuid.UUID('acf60de8-afa9-46b4-9e67-1766b448d2d1'), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('value_count', models.IntegerField(blank=True, null=True)),
                ('no_data_value', models.DecimalField(decimal_places=16, max_digits=22)),
                ('intended_time_spacing', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True)),
                ('time_aggregation_interval', models.DecimalField(decimal_places=16, max_digits=22)),
                ('phenomenon_begin_time', models.DateTimeField(blank=True, null=True)),
                ('phenomenon_end_time', models.DateTimeField(blank=True, null=True)),
                ('aggregation_statistic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.aggregationstatisticcv')),
                ('intended_time_spacing_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='intended_time_spacing_unit', to='odmst.unit')),
                ('observation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.observationtypecv')),
                ('observed_property', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.observedproperty')),
                ('processing_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.processinglevel')),
                ('result_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.resulttypecv')),
                ('sampled_medium', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.sampledmediumcv')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.sensor')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='odmst.statuscv')),
                ('thing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.thing')),
                ('time_aggregation_interval_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='time_aggregation_interval_unit', to='odmst.unit')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odmst.unit')),
            ],
        ),
    ]
